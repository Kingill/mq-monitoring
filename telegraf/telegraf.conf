[[outputs.influxdb_v2]]
  urls = ["http://192.168.1.20:8086"]
  token = "p97Wv_Ws1K_EIc0QzYozglZxiv3ictfeewF_VKUwLznJCiBuFegH4w2oBIE0HF-PJKHcGvzjVn0gJRVsthBslg=="
  organization = "teslamate"
  bucket = "gilles"

[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"


[[inputs.file]]
    files = ["/etc/telegraf/example"]
    data_format = "json_v2"
    tagexclude = ["host"]
    [[inputs.file.json_v2]]
        measurement_name = "MQ Statistics"
        timestamp_path = "QueueStatistics.IntervalStartDate"
        timestamp_format = "unix"

        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.PutCount.0"
            rename = "put_count_0"
        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.PutCount.1"
            rename = "put_count_1"

        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.Put1Count.0"
            rename = "put1_count_0"
        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.Put1Count.1"
            rename = "put1_count_1"

        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.GetCount.0"
            rename = "get_count_0"
        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.GetCount.1"
            rename = "get_count_1"

        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.PutBytes.0"
            rename = "put_bytes_0"
        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.PutBytes.1"
            rename = "put_bytes_1"

        [[inputs.file.json_v2.tag]]
            path = "QueueStatistics.QueueManager"

        [[inputs.file.json_v2.tag]]
            path = "QueueStatistics.QueueName"

        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.GetBytes.0"
            rename = "get_bytes_0"
        [[inputs.file.json_v2.field]]
            path = "QueueStatistics.GetBytes.1"
            rename = "get_bytes_1"



# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states
  report_active = false
  ## If true and the info is available then add core_id and physical_id tags
  core_tags = false
